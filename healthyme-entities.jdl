enum AppointmentStatus { PENDING, CONFIRMED, CANCELLED }
enum Gender { MALE, FEMALE, OTHER, UNKNOWN }

entity UserProfile {
  firstName String required
  lastName String required
  phone String
  gender Gender
}

entity Doctor {
  firstName String required
  lastName String required
  specialty String required
  phone String
  address String
  notes String maxlength(1000)
}

entity Visit {
  visitDate LocalDate required
  notes String maxlength(2000)
}

entity Appointment {
  startDateTime ZonedDateTime required
  durationMinutes Integer min(1)
  address String
  specialtySnapshot String
  notes String maxlength(1000)
  status AppointmentStatus required
}

entity MedicationCategory {
  name String required unique
  description String maxlength(500)
}

entity Medication {
  name String required
  rating Integer min(0) max(10)
  notes String maxlength(1000)
}

entity MedicationPlan {
  planName String required
  startDate LocalDate required
  endDate LocalDate required
  medicationName String required
  colorHex String
}

entity MedicationPlanDose {
  timeOfDay String required pattern(/[0-2]\d:[0-5]\d/)
  notes String maxlength(500)
}

entity ExaminationCategory {
  name String required unique
  description String maxlength(500)
}

entity ExaminationRecord {
  title String required
  examDate LocalDate required
  file AnyBlob required
  originalFilename String
  storedFilename String
  notes String maxlength(1000)
}

// Σχέσεις
relationship ManyToOne {
  UserProfile{user(login) required} to User with builtInEntity
  Doctor{owner(login) required} to User with builtInEntity
  Visit{owner(login) required} to User with builtInEntity
  Appointment{owner(login) required} to User with builtInEntity
  MedicationCategory{owner(login) required} to User with builtInEntity
  Medication{owner(login) required} to User with builtInEntity
  MedicationPlan{owner(login) required} to User with builtInEntity
  MedicationPlanDose{owner(login) required} to User with builtInEntity
  ExaminationCategory{owner(login) required} to User with builtInEntity
  ExaminationRecord{owner(login) required} to User with builtInEntity
}

relationship ManyToOne {
  Visit{doctor required} to Doctor
}

relationship ManyToOne {
  Appointment{doctor} to Doctor
}

relationship OneToMany {
  MedicationPlan{doses} to MedicationPlanDose{plan required}
}

relationship ManyToMany {
  Medication{categories} to MedicationCategory{medications}
}

relationship ManyToOne {
  ExaminationRecord{category} to ExaminationCategory
}

// Επιλογές
dto * with mapstruct
service * with serviceClass
paginate Doctor, Medication, ExaminationRecord, Appointment with pagination
filter *
