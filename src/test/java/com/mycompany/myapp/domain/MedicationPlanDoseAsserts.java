package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicationPlanDoseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationPlanDoseAllPropertiesEquals(MedicationPlanDose expected, MedicationPlanDose actual) {
        assertMedicationPlanDoseAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicationPlanDoseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationPlanDoseAllUpdatablePropertiesEquals(MedicationPlanDose expected, MedicationPlanDose actual) {
        assertMedicationPlanDoseUpdatableFieldsEquals(expected, actual);
        assertMedicationPlanDoseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationPlanDoseAutoGeneratedPropertiesEquals(MedicationPlanDose expected, MedicationPlanDose actual) {
        assertThat(actual)
            .as("Verify MedicationPlanDose auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationPlanDoseUpdatableFieldsEquals(MedicationPlanDose expected, MedicationPlanDose actual) {
        assertThat(actual)
            .as("Verify MedicationPlanDose relevant properties")
            .satisfies(a -> assertThat(a.getTimeOfDay()).as("check timeOfDay").isEqualTo(expected.getTimeOfDay()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationPlanDoseUpdatableRelationshipsEquals(MedicationPlanDose expected, MedicationPlanDose actual) {
        assertThat(actual)
            .as("Verify MedicationPlanDose relationships")
            .satisfies(a -> assertThat(a.getPlan()).as("check plan").isEqualTo(expected.getPlan()));
    }
}
