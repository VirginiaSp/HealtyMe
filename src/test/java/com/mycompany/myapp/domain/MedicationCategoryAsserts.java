package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicationCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationCategoryAllPropertiesEquals(MedicationCategory expected, MedicationCategory actual) {
        assertMedicationCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicationCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationCategoryAllUpdatablePropertiesEquals(MedicationCategory expected, MedicationCategory actual) {
        assertMedicationCategoryUpdatableFieldsEquals(expected, actual);
        assertMedicationCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationCategoryAutoGeneratedPropertiesEquals(MedicationCategory expected, MedicationCategory actual) {
        assertThat(actual)
            .as("Verify MedicationCategory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationCategoryUpdatableFieldsEquals(MedicationCategory expected, MedicationCategory actual) {
        assertThat(actual)
            .as("Verify MedicationCategory relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicationCategoryUpdatableRelationshipsEquals(MedicationCategory expected, MedicationCategory actual) {
        assertThat(actual)
            .as("Verify MedicationCategory relationships")
            .satisfies(a -> assertThat(a.getMedications()).as("check medications").isEqualTo(expected.getMedications()));
    }
}
